# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type Query {
  blogMetadata(tags: [String!], category: String, onlyPublished: Boolean): [PostMetadata!]!
  postBySlug(slug: String!): Post!
  blogCategories: [String!]!
  blogTags: [String!]!

  """Gets all experiences."""
  experiences: [Experience!]!

  """Gets all skill values with optional filtering by type."""
  skills(onlyType: String): [Skill!]!

  """Gets all types for skills."""
  skillTypes: [String!]!
  projectMetadata(type: [String!], frameworks: [String!], languages: [String!], onlyPublished: Boolean): [ProjectMetadata!]!
  projectFrameworks: [String!]!
  projectTypes: [String!]!
  projectLanguages: [String!]!
}

type PostMetadata {
  id: String!
  name: String!
  description: [RichText!]!
  category: String!
  tags: [String!]!
  date: Timestamp!
  slug: String!
  image: String
}

type RichText {
  """Text content for rich text."""
  plainText: String!

  """HREF for link text."""
  href: String

  """Rich text annotations."""
  annotations: Annotations!

  """Inline Latex boolean"""
  inlineLatex: Boolean
}

"""Object containing properties for rich text."""
type Annotations {
  """Bold text."""
  bold: Boolean!

  """Underlined text."""
  underline: Boolean!

  """Text with a line through it."""
  strikethrough: Boolean!

  """Inline code text."""
  code: Boolean!

  """Italicized text."""
  italic: Boolean!

  """Colored text."""
  color: String!

  """Name of language for code block."""
  language: String
}

"""
The javascript `Date` as integer. Type represents date and time as number of milliseconds from start of UNIX epoch.
"""
scalar Timestamp

type Post {
  metadata: PostMetadata!
  content: [Block!]!
}

"""Block content for posts"""
type Block {
  type: String!
  content: [BlockContent!]!
}

"""Union type for block content"""
union BlockContent = Image | List | RichText | Equation

"""Object containing image properties."""
type Image {
  """Image url."""
  url: String!

  """Image caption."""
  caption: [RichText!]!
}

type List {
  children: [ListItem!]!
}

"""List item with unlimited depth of children"""
type ListItem {
  content: [RichText!]!
  children: [ListItem!]
}

type Equation {
  expression: String!
}

"""Experience information."""
type Experience {
  """Company experience is for."""
  company: String!

  """Role at company."""
  role: String!

  """Description of experience."""
  description: [RichText!]!

  """Type/Field of experience."""
  type: String!

  """Skills learned/employed at experience."""
  skills: [String!]!

  """Duration of experience."""
  timeframe: Timeframe!
}

"""Duration of experience (null end means currently active)"""
type Timeframe {
  """Start of experience."""
  start: Timestamp!

  """End of experience."""
  end: Timestamp
}

"""Skill information."""
type Skill {
  """Name of skill."""
  name: String!

  """Type categorization of skill."""
  type: String!

  """Competency in skill out of 100."""
  value: Int!
}

"""Metadata for project posts"""
type ProjectMetadata {
  id: String!
  name: String!
  description: [RichText!]!
  languages: [String!]!
  frameworks: [String!]!
  type: [String!]!
  dateRange: Timeframe!
  external: String
  github: String
}